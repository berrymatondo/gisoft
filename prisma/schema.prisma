// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GiStatuses {
 ACTIF
 INACTIF
 SUSPENDU
 // amount Decimal?  @mysql.Decimal(10, 2)
}

model Secteur {
  id Int @id @default(autoincrement())
  name String @unique
  gis Gi[]

  personId Int?
  person Person? @relation(fields: [personId], references: [id]) 
  
  createAt DateTime? @default(now())
  updatedAt DateTime?  @updatedAt
}

model Gi {
  id Int @id @default(autoincrement())
  name String @unique
  hours String @default("De 19h Ã  20h30")
  days String  @default("Tous les jeudis")
  statut GiStatuses @default(INACTIF)
  persons Person[] 
  meetings Meeting[] 

  
  secteurId Int?
  secteur Secteur? @relation(fields: [secteurId], references: [id])

  addressId Int?
  address Address? @relation(fields: [addressId], references: [id]) 
  
  createAt DateTime? @default(now())
  updatedAt DateTime?  @updatedAt
}

model Address {
  id Int @id @default(autoincrement())
  street String
  number String
  box String?
  municipality String
  postalCode String
  city String
  country String

  longitude String?
  latitude String?

  gi Gi[] 

  createAt DateTime? @default(now())
  updatedAt DateTime?  @updatedAt
}

model Person {
  id Int @id @default(autoincrement())
  firstname String
  lastname String?
  email String?
  city String?
  mobile String?
  isIcc Boolean? @default(false)
  isStar Boolean? @default(false)
  isPilote Boolean? @default(false)
  secteurs Secteur[]
  
  giId Int?
  gi Gi? @relation(fields: [giId], references: [id]) 

  createAt DateTime? @default(now())
  updatedAt DateTime?  @updatedAt
}
model Meeting {
  id Int @id @default(autoincrement())
  date DateTime @default(now())
  nCon Int @default(0)
  nPar Int @default(0)
  nStar Int @default(0)
  nIcc Int @default(0)
  nNIcc Int @default(0)
  nNew Int @default(0)
  onLine Boolean @default(true)
  notes String?
  
  giId Int?
  gi Gi? @relation(fields: [giId], references: [id]) 

  createAt DateTime? @default(now())
  updatedAt DateTime?  @updatedAt
}
